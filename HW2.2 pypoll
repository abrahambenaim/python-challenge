{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "poll_data = pd.read_csv(\"/Users/cla/Desktop/UM Data Science/Homework/03-Python/Instructions/PyPoll/Resources/election_data.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Voter ID</th>\n",
       "      <th>County</th>\n",
       "      <th>Candidate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12864552</td>\n",
       "      <td>Marsh</td>\n",
       "      <td>Khan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>17444633</td>\n",
       "      <td>Marsh</td>\n",
       "      <td>Correy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>19330107</td>\n",
       "      <td>Marsh</td>\n",
       "      <td>Khan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>19865775</td>\n",
       "      <td>Queen</td>\n",
       "      <td>Khan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11927875</td>\n",
       "      <td>Marsh</td>\n",
       "      <td>Khan</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Voter ID County Candidate\n",
       "0  12864552  Marsh      Khan\n",
       "1  17444633  Marsh    Correy\n",
       "2  19330107  Marsh      Khan\n",
       "3  19865775  Queen      Khan\n",
       "4  11927875  Marsh      Khan"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poll_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3521001"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total_votes = poll_data.County.count()\n",
    "total_votes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Khan', 'Correy', 'Li', \"O'Tooley\"], dtype=object)"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "candidates_list = poll_data['Candidate'].unique()\n",
    "candidates_list\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Khan: 2218231 votes\n",
      "Correy: 704200 votes\n",
      "Li: 492940 votes\n",
      "Tooley: 105630 votes\n"
     ]
    }
   ],
   "source": [
    "khan_votes = poll_data.loc[poll_data.Candidate == 'Khan', 'Candidate'].count()\n",
    "correy_votes = poll_data.loc[poll_data.Candidate == 'Correy', 'Candidate'].count()\n",
    "li_votes = poll_data.loc[poll_data.Candidate == 'Li', 'Candidate'].count()\n",
    "tooley_votes = poll_data.loc[poll_data.Candidate == \"O'Tooley\", \"Candidate\"].count()\n",
    "\n",
    "print(\"Khan: \" + str(khan_votes) + \" votes\")\n",
    "print(\"Correy: \" + str(correy_votes) + \" votes\")\n",
    "print(\"Li: \" + str(li_votes) + \" votes\")\n",
    "print(\"Tooley: \" + str(tooley_votes) + \" votes\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Khan: 63.0%\n",
      "Correy: 20.0 %\n",
      "Li: 14.0 %\n",
      "Tooley: 3.0 %\n"
     ]
    }
   ],
   "source": [
    "khan_percent = round((khan_votes/total_votes) * 100,2)\n",
    "correy_percent = round((correy_votes/total_votes) * 100,2)\n",
    "li_percent = round((li_votes/total_votes) * 100,2)\n",
    "tooley_percent = round((tooley_votes/total_votes) * 100,2)\n",
    "\n",
    "print(\"Khan: \" + str(khan_percent) + \"%\")\n",
    "print(\"Correy: \" + str(correy_percent) + \" %\")\n",
    "print(\"Li: \" + str(li_percent) + \" %\")\n",
    "print(\"Tooley: \" + str(tooley_percent) + \" %\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   Election Results\n",
      "--------------------------------------------------------\n",
      "Total Votes: 3521001\n",
      "                            \n",
      "Khan: 63.0% (2218231)\n",
      "Correy: 20.0% (704200)\n",
      "Li: 14.0% (492940)\n",
      "O'Tooley: 3.0%(105630)\n",
      "                            \n",
      "--------------------------------------------------------\n",
      "                     The Winner is Khan\n",
      "--------------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "print('                   Election Results')\n",
    "print('--------------------------------------------------------')\n",
    "print(f'Total Votes: {total_votes}')\n",
    "print('                            ')\n",
    "print(f'Khan: {khan_percent}% ({khan_votes })')\n",
    "print(f'Correy: {correy_percent}% ({correy_votes})')\n",
    "print(f'Li: {li_percent}% ({li_votes})')\n",
    "print(\"O'Tooley: \" + str(tooley_percent) +\"%\"+\"(\"+ str(tooley_votes)+\")\")\n",
    "print('                            ')\n",
    "print('--------------------------------------------------------')\n",
    "print('                     The Winner is Khan')\n",
    "print('--------------------------------------------------------')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "x1 = ('                   Election Results')\n",
    "x2 = ('--------------------------------------------------------')\n",
    "xd = ('                            ')\n",
    "x3 = (f'Total Votes: {total_votes}')\n",
    "x4 = ('                            ')\n",
    "x5 = (f'Khan: {khan_percent}% ({khan_votes })')\n",
    "x6 = (f'Correy: {correy_percent}% ({correy_votes})')\n",
    "x7 = (f'Li: {li_percent}% ({li_votes})')\n",
    "x8 = (\"O'Tooley: \" + str(tooley_percent) +\"%\"+\"(\"+ str(tooley_votes)+\")\")\n",
    "x9 = ('                            ')\n",
    "x10 = ('--------------------------------------------------------')\n",
    "x11 = ('                     And the winner is... Khan !!')\n",
    "x12 = ('--------------------------------------------------------')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "result2 = {'str': [x1,x2,xd,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12]}\n",
    "      \n",
    "output2 = pd.DataFrame(result2)\n",
    "\n",
    "output2.to_csv('Py_poll.txt',header=False,index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
